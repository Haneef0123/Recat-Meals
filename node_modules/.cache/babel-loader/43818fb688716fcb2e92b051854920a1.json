{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Haneef\\\\Downloads\\\\Reactjs\\\\Udemy__Course-Maxmillian\\\\Food-order-app\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaltCartState = {\n  items: [],\n  totalAMount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type = \"ADD\") {\n    console.log(\"Running logic to add item\");\n  }\n\n  return defaltCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaltCartState);\n\n  const addItemToCartHandler = item => {\n    console.log(\"Dispatching action to add the item\");\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    console.log(\"Dispatching action to remove the item\");\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAMount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  console.log(\"Inside Cart Provider\", CartContext);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"gDCUgOl8XgShXDI0fAgiS5bBAJU=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Haneef/Downloads/Reactjs/Udemy__Course-Maxmillian/Food-order-app/01-starting-project/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaltCartState","items","totalAMount","cartReducer","state","action","type","console","log","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","item","removeItemFromCartHandler","id","cartContext","totalAmount","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,WAAW,EAAE;AAFS,CAAxB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAKA,MAAM,CAACC,IAAP,GAAc,KAAnB,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;;AACD,SAAOR,eAAP;AACD,CALD;;AAOA,MAAMS,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCd,UAAU,CAChDK,WADgD,EAEhDH,eAFgD,CAAlD;;AAIA,QAAMa,oBAAoB,GAAIC,IAAD,IAAU;AACrCP,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAI,IAAAA,kBAAkB,CAAC;AAAEN,MAAAA,IAAI,EAAE,KAAR;AAAeQ,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAHD;;AAIA,QAAMC,yBAAyB,GAAIC,EAAD,IAAQ;AACxCT,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AAEAI,IAAAA,kBAAkB,CAAC;AAAEN,MAAAA,IAAI,EAAE,QAAR;AAAkBU,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAJD;;AAKA,QAAMC,WAAW,GAAG;AAClBhB,IAAAA,KAAK,EAAEU,SAAS,CAACV,KADC;AAElBiB,IAAAA,WAAW,EAAEP,SAAS,CAACT,WAFL;AAGlBiB,IAAAA,OAAO,EAAEN,oBAHS;AAIlBO,IAAAA,UAAU,EAAEL;AAJM,GAApB;AAMAR,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCT,WAApC;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEkB,WAA7B;AAAA,cACGP,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BD;;GAAMZ,Y;;KAAAA,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaltCartState = {\r\n  items: [],\r\n  totalAMount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if ((action.type = \"ADD\")) {\r\n    console.log(\"Running logic to add item\");\r\n  }\r\n  return defaltCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaltCartState\r\n  );\r\n  const addItemToCartHandler = (item) => {\r\n    console.log(\"Dispatching action to add the item\");\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n  const removeItemFromCartHandler = (id) => {\r\n    console.log(\"Dispatching action to remove the item\");\r\n\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAMount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n  console.log(\"Inside Cart Provider\", CartContext);\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}